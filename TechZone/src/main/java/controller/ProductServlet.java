package controller;

import dao.ProductDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import java.io.IOException;
import java.util.ArrayList;
import model.Product;

@WebServlet(name = "ProductServlet", urlPatterns = {"/products"})
public class ProductServlet extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
            ProductDAO dao = new ProductDAO();
            String action = request.getParameter("action");
            String category = request.getParameter("category");
            String view = request.getParameter("view");
            if (view == null || view.equals("home")) {
                request.getRequestDispatcher("/WEB-INF/home.jsp").forward(request, response);
            }
            try {
                // üè† 1Ô∏è‚É£ Kh√¥ng c√≥ action/category ‚Üí hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m
                if (action == null && category == null) {
                    ArrayList<Product> list = (ArrayList<Product>) dao.getAllProducts();
                    request.setAttribute("list", list);
                    request.getRequestDispatcher("home.jsp").forward(request, response);
                    return;
                }

                // üì± 2Ô∏è‚É£ L·ªçc theo danh m·ª•c
                if (category != null) {
                    ArrayList<Product> list;
                    String viewPath = "/WEB-INF/views/user/product/product-list/";

                    switch (category) {
                        case "phone":
                            list = (ArrayList<Product>) dao.getProductsByCategory(2);
                            viewPath += "phone-list.jsp";
                            break;

                        case "laptop":
                            list = (ArrayList<Product>) dao.getProductsByCategory(1);
                            viewPath += "laptop-list.jsp";
                            break;

                        case "accessory":
                            list = (ArrayList<Product>) dao.getProductsByCategory(3);
                            viewPath += "accessory-list.jsp";
                            break;

                        default:
                            response.sendRedirect("products");
                            return;
                    }

                    request.setAttribute("list", list);
                    request.getRequestDispatcher(viewPath).forward(request, response);
                    return;
                }

                // üîç 3Ô∏è‚É£ Xem chi ti·∫øt s·∫£n ph·∫©m
                if ("detail".equalsIgnoreCase(action)) {
                    String id = request.getParameter("id");

                    if (id == null || id.isEmpty()) {
                        System.out.println("‚ö†Ô∏è Kh√¥ng c√≥ ID trong request!");
                        response.sendRedirect("products");
                        return;
                    }

                    try {
                        int productId = Integer.parseInt(id);
                        Product product = dao.getProductById(productId);

                        if (product == null) {
                            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi ID = " + id);

                            response.sendRedirect("products");
                            return;
                        }

                        // Ki·ªÉm tra map null ƒë·ªÉ tr√°nh l·ªói JSP
                        if (product.getAttributesMap() == null) {
                            System.out.println("‚ö†Ô∏è attributesMap null ‚Üí kh·ªüi t·∫°o r·ªóng.");
                            product.setAttributesMap(new java.util.HashMap<>());
                        }

                        request.setAttribute("product", product);
                        request.getRequestDispatcher("/WEB-INF/views/user/product/product-detail/product-detail.jsp").forward(request, response);
                        return;

                    } catch (NumberFormatException e) {
                        System.out.println("‚ùå ID kh√¥ng h·ª£p l·ªá: " + id);
                        response.sendRedirect("products");
                        return;
                    }
                }

                // N·∫øu action kh√¥ng h·ª£p l·ªá ‚Üí quay l·∫°i home
                response.sendRedirect("products");

            } catch (Exception e) {
                e.printStackTrace();
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "L·ªói khi t·∫£i s·∫£n ph·∫©m: " + e.getMessage());
            }
        

    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Kh√¥ng d√πng POST ·ªü ƒë√¢y
    }
}
